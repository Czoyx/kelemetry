name: Generate site

on:
  push:
    branches: [main, ci-test]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  generate:
    name: Generate GitHub pages
    runs-on: [ubuntu-20.04]
    concurrency:
      group: gh-pages
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Install graphviz
        run: sudo apt-get install -y graphviz

      - name: Compile binary
        run: make output/kelemetry

      - name: Re-generate USAGE.txt
        run: make usage
      - name: Generate depgraph
        run: make dot

      - name: Install kind
        run: wget -O kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/kind
      - name: Start test cluster
        run: make kind
      - name: Start test setup
        run: make quickstart

      - name: Install kubectl
        run: |
          wget -O kubectl https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl && \
            chmod +x kubectl && \
            sudo mv kubectl /usr/local/bin/kubectl

      - name: Trigger test trace
        run: |
          kubectl create deployment demo --image=alpine:3.16 --replicas=2 -- sleep infinity
          sleep 5
          kubectl scale deployment demo --replicas=4
          sleep 5
          kubectl set image deployments demo alpine=alpine:3.17
          sleep 5
          kubectl scale deployment demo --replicas=2
          sleep 5
          kubectl delete deployment demo
          sleep 60

      - name: Download Jaeger UI
        run: |
          wget -O - https://github.com/jaegertracing/jaeger-ui/releases/download/v1.28.1/assets.tar.gz | tar xzv -C output
          mv output/packages/jaeger-ui/build output/gh-pages
          sed -i 's#<base href="/"#<base href="/kelemetry/"#g' output/gh-pages/index.html

      - name: Pre-render API
        run: |
          set -o pipefail

          mkdir -p output/gh-pages/api/traces

          # TODO what can we do about the trace search page?

          TRACE_ID=$(curl -i -G \
              --data-urlencode cluster=tracetest \
              --data-urlencode resource=deployments \
              --data-urlencode namespace=default \
              --data-urlencode name=demo \
              --data-urlencode ts="$(date --iso-8601=seconds)" \
              localhost:8080/redirect | \
            grep "Location: /trace/" | cut -d/ -f3 | tr -d '\r'
          )
          for mode in ff{0,1,2,3}{0,1}; do
            mode_trace=${mode}${TRACE_ID:4}
            curl -o output/gh-pages/api/traces/$mode_trace http://localhost:16686/api/traces/$mode_trace

            mkdir -p output/gh-pages/trace/$mode_trace
            cp output/gh-pages/index.html output/gh-pages/trace/${mode_trace}/index.html
          done

          # Overwrite index.html to provide index
          echo "<html>
            <head><title>Kelemetry preview</title></head>
            <body>
              <h1>Kelemetry preview</h1>
              <ul>
                <li><a href='/kelemetry/trace/ff20${TRACE_ID:4}'>Tracing (recommended)</a></li>
                <li><a href='/kelemetry/trace/ff30${TRACE_ID:4}'>Grouped</a></li>
                <li><a href='/kelemetry/trace/ff00${TRACE_ID:4}'>Tree</a></li>
                <li><a href='/kelemetry/trace/ff10${TRACE_ID:4}'>Timeline</a></li>
              </ul>
              <p>
                This preview contains assets from <a href='https://github.com/jaegertracing/jaeger-ui'>jaeger-ui</a>,
                which is distributed under <a href='https://github.com/jaegertracing/jaeger-ui/raw/main/LICENSE'>Apache License 2.0</a>.
                Part of the jaeger-ui assets may have been modified by Kelemetry to customize for static display.
              </p>
            </body>
          </html>" >output/gh-pages/index.html

      - name: Stage pages
        run: |
          mv USAGE.txt depgraph.* output/gh-pages/


      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: output/gh-pages
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v2
