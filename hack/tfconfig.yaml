configs:
  - id: "00000000"
    name: "tree"
    steps:
      - kind: Batch
        batchName: initial
      - kind: Batch
        batchName: final
  - id: "10000000"
    name: "timeline"
    steps:
      - kind: Batch
        batchName: initial
      - kind: ExtractNestingVisitor
        matchesPseudoType:
          oneOf: ["object"]
      - kind: Batch
        batchName: final
  - id: "20000000"
    name: "tracing"
    steps:
      - kind: Batch
        batchName: initial
      - kind: Batch
        batchName: collapse
      - kind: CompactDurationVisitor
      - kind: Batch
        batchName: final
  - id: "30000000"
    name: "grouped"
    steps:
      - kind: Batch
        batchName: initial
      - kind: Batch
        batchName: collapse
      - kind: GroupByTraceSourceVisitor
        shouldBeGrouped:
          oneOf: ["event"]
          negate: true
      - kind: CompactDurationVisitor
      - kind: Batch
        batchName: final

modifiers:
  "01000000":
    displayName: exclusive
    modifierName: exclusive

# Uncomment to enable extension trace from apiserver
#   "00000001":
#     # We want to run extension modifiers after exclusive modifier to avoid fetching unused traces
#     displayName: apiserver trace
#     modifierName: extension
#     args:
#       kind: JaegerStorage
#       storageArgs:
#         span-storage.type: grpc-plugin
#         grpc-storage.server: 127.0.0.1:17272
#       service: apiserver
#       operation: Update
#       tagTemplates:
#         audit-id: "{{.auditId}}"
#       numTracesLimit: 5
#
#       forAuditEvent: true
#
#       # Restrict the total wall time duration for performing queries for this extension on each trace
#       totalTimeout: 15s
#       # Restrict the number of concurrent queries
#       maxConcurrency: 4

# http trace extension demo
#   "00000002":
#     displayName: http trace extension
#     modifierName: extension
#     args:
#       kind: HTTPTrace
#       traceBackends:
#       - tagFilters:
#           resource: pods
#           nodes: ".+"
#         argsTemplates:
#           node: "{{.nodes}}"
#           pod: "{{.namespace}}/{{.name}}"
#           start: "{{unixMicro .start}}"
#           end: "{{unixMicro .end}}"
#           limit: "100"
#         urlTemplate: "http://test-domain/api/traces"
#         forObject: true
#       maxConcurrency: 100
#       totalTimeout: 60s

batches:
  - name: initial
    steps:
      - kind: PruneChildlessVisitor
      - kind: ReplaceNameVisitor
      - kind: ObjectTagsVisitor
        resourceTags: ["nodes"]
      - kind: ServiceOperationReplaceVisitor
        traceSource: "object"
        dest: service
        source: ["resource"]
      - kind: ServiceOperationReplaceVisitor
        traceSource: "object"
        dest: operation
        source: ["namespace", "name"]
  - name: final
    steps:
      - kind: ClusterNameVisitor
      - kind: PruneTagsVisitor
  - name: collapse
    steps:
      - kind: CollapseNestingVisitor
        shouldCollapse:
          oneOf: []
          negate: true
        tagMappings:
          "audit":
            - fromSpanTag: "userAgent"
              toLogField: "userAgent"
            - fromSpanTag: "sourceIP"
              toLogField: "sourceIP"
          "event":
            - fromSpanTag: "action"
              toLogField: "action"
            - fromSpanTag: "source"
              toLogField: "source"
        auditDiffClasses:
          default:
            shouldDisplay: true
            name: "diff"
            priority: 0
          fields:
            - class:
                shouldDisplay: true
                name: "verbose diff"
                priority: 10
              fields:
                - "metadata.resourceVersion"
                - "metadata.generation"
            - class:
                shouldDisplay: false
              fields:
                - "metadata.managedFields"
        logTypeMapping:
          event/message: "message"
          audit/objectSnapshot: "snapshot"
          realError: "error"
          realVerbose: ""
          kelemetryError: "_debug"
